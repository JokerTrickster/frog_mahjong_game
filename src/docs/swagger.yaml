definitions:
  main_features_game_profiles_model_response.Profile:
    properties:
      image:
        type: string
      name:
        type: string
      profileID:
        type: integer
    type: object
  main_features_game_users_model_response.Profile:
    properties:
      isAchieved:
        description: 획득 여부
        type: boolean
      profileID:
        description: 프로필 ID
        type: integer
    type: object
  main_features_game_users_model_response.User:
    properties:
      coin:
        type: integer
      email:
        type: string
      name:
        type: string
      state:
        type: string
      userID:
        type: integer
    type: object
  main_features_profiles_model_response.Profile:
    properties:
      image:
        type: string
      name:
        type: string
      profileID:
        type: integer
      totalCount:
        type: integer
    type: object
  main_features_rooms_model_response.User:
    properties:
      ownedCardCount:
        type: integer
      owner:
        type: boolean
      playerState:
        type: string
      roomID:
        type: integer
      roomUserID:
        type: integer
      score:
        type: integer
      turnNumber:
        type: integer
      userEmail:
        type: string
      userID:
        type: integer
      userName:
        type: string
    type: object
  main_features_users_model_response.Profile:
    properties:
      currentCount:
        description: 현재 획득 포인트
        type: integer
      isAchieved:
        description: 획득 여부
        type: boolean
      profileID:
        description: 프로필 ID
        type: integer
    type: object
  main_features_users_model_response.User:
    properties:
      coin:
        type: integer
      email:
        type: string
      name:
        type: string
      state:
        type: string
      userID:
        type: integer
    type: object
  request.Card:
    properties:
      cardID:
        type: integer
      roomID:
        type: integer
      state:
        type: string
      userID:
        type: integer
    type: object
  request.CardInfo:
    properties:
      beakDirection:
        type: string
      habitat:
        type: string
      image:
        type: string
      name:
        type: string
      nest:
        type: string
      size:
        type: integer
    type: object
  request.ImageInfo:
    properties:
      abnormalImage:
        type: string
      level:
        type: integer
      normalImage:
        type: string
      positions:
        items:
          $ref: '#/definitions/request.Position'
        type: array
    type: object
  request.Position:
    properties:
      x:
        type: number
      "y":
        type: number
    type: object
  request.ReqAlertGameUsers:
    properties:
      alert:
        type: boolean
    type: object
  request.ReqAlertUsers:
    properties:
      alert:
        type: boolean
    type: object
  request.ReqCheckSession:
    properties:
      sessionID:
        type: string
    type: object
  request.ReqCheckSignin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ReqCreate:
    properties:
      maxCount:
        type: integer
      minCount:
        type: integer
      name:
        type: string
      password:
        type: string
      timer:
        type: integer
    required:
    - maxCount
    - minCount
    - name
    - timer
    type: object
  request.ReqDiscard:
    properties:
      cardID:
        type: integer
      cardState:
        type: string
      roomID:
        type: integer
      userID:
        type: integer
    type: object
  request.ReqDora:
    properties:
      cardColor:
        type: string
      cardID:
        type: integer
      cardName:
        type: string
      cardState:
        type: string
      roomID:
        type: integer
    type: object
  request.ReqFCMToken:
    properties:
      fcmToken:
        type: string
    type: object
  request.ReqFindItImageInfo:
    properties:
      imageInfoList:
        items:
          $ref: '#/definitions/request.ImageInfo'
        type: array
    type: object
  request.ReqFindItResult:
    properties:
      roomID:
        type: integer
    type: object
  request.ReqFindItSoloPlayBoardGame:
    properties:
      round:
        type: integer
    type: object
  request.ReqGameCheckSignin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ReqGameFCMToken:
    properties:
      fcmToken:
        type: string
    type: object
  request.ReqGameNameCheck:
    properties:
      name:
        type: string
    type: object
  request.ReqGameReissue:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  request.ReqGameRequestPassword:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.ReqGameRequestSignup:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.ReqGameSignin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ReqGameSignup:
    properties:
      authCode:
        type: string
      email:
        type: string
      name:
        maxLength: 6
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    type: object
  request.ReqGameValidatePassword:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  request.ReqGameValidateSignup:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  request.ReqLoan:
    properties:
      loanCardID:
        type: integer
      loanUserID:
        type: integer
      roomID:
        type: integer
    type: object
  request.ReqNextTurn:
    properties:
      playerState:
        type: string
      roomID:
        type: integer
      turnNumber:
        type: integer
      userID:
        type: integer
    type: object
  request.ReqOut:
    properties:
      roomID:
        type: integer
    type: object
  request.ReqOwnership:
    properties:
      cards:
        items:
          $ref: '#/definitions/request.Card'
        type: array
    type: object
  request.ReqPushGameUsers:
    properties:
      message:
        type: string
      role:
        type: string
      title:
        type: string
    type: object
  request.ReqPushUsers:
    properties:
      message:
        type: string
      role:
        type: string
      title:
        type: string
    type: object
  request.ReqReady:
    properties:
      playerState:
        type: string
      roomID:
        type: integer
    type: object
  request.ReqReissue:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  request.ReqReport:
    properties:
      categoryID:
        type: integer
      reason:
        type: string
      targetUserID:
        type: integer
    type: object
  request.ReqReportImageUploadGame:
    properties:
      failedList:
        items:
          type: string
        type: array
      successList:
        items:
          type: string
        type: array
    type: object
  request.ReqRequestPassword:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.ReqRequestSignup:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.ReqResult:
    properties:
      cards:
        items:
          $ref: '#/definitions/request.ResultCard'
        type: array
      roomID:
        type: integer
    type: object
  request.ReqSaveCardInfo:
    properties:
      cards:
        items:
          $ref: '#/definitions/request.CardInfo'
        type: array
    type: object
  request.ReqSignin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ReqSignup:
    properties:
      authCode:
        type: string
      email:
        type: string
      name:
        maxLength: 6
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    type: object
  request.ReqStart:
    properties:
      roomID:
        type: integer
      state:
        type: string
    type: object
  request.ReqUpdateCard:
    properties:
      card:
        $ref: '#/definitions/request.UpdateCard'
    type: object
  request.ReqUpdateGameUsers:
    properties:
      name:
        maxLength: 6
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      profileID:
        type: integer
    type: object
  request.ReqUpdateUsers:
    properties:
      name:
        maxLength: 6
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      profileID:
        type: integer
    type: object
  request.ReqV2Report:
    properties:
      categoryID:
        type: integer
      reason:
        type: string
      targetUserID:
        type: integer
    type: object
  request.ReqV2Result:
    properties:
      roomID:
        type: integer
      userID:
        type: integer
    type: object
  request.ReqValidatePassword:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  request.ReqWinRequest:
    properties:
      roomID:
        type: integer
      score:
        type: integer
      userID:
        type: integer
    type: object
  request.ResultCard:
    properties:
      cardID:
        type: integer
    type: object
  request.UpdateCard:
    properties:
      beakDirection:
        type: string
      cardID:
        type: integer
      habitat:
        type: string
      name:
        type: string
      nest:
        type: string
      size:
        type: integer
    type: object
  response.BirdCard:
    properties:
      beakDirection:
        type: string
      habitat:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      nest:
        type: string
      size:
        type: integer
    type: object
  response.Category:
    properties:
      id:
        type: integer
      reason:
        type: string
    type: object
  response.DrawResult:
    properties:
      successMissions:
        items:
          type: integer
        type: array
      userID:
        type: integer
    type: object
  response.FrogCard:
    properties:
      color:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  response.GameInfo:
    properties:
      category:
        type: string
      description:
        type: string
      hashTag:
        type: string
      image:
        type: string
      isEnabled:
        type: boolean
      title:
        type: string
      youtubeUrl:
        type: string
    type: object
  response.GoogleOauthCallbackRes:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  response.HistoryChat:
    properties:
      created:
        type: string
      id:
        type: integer
      message:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
  response.ListRoom:
    properties:
      created:
        type: integer
      currentCount:
        type: integer
      id:
        type: integer
      maxCount:
        type: integer
      minCount:
        type: integer
      name:
        type: string
      ownerID:
        type: integer
      password:
        type: boolean
      state:
        type: string
    type: object
  response.Mission:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      title:
        type: string
    type: object
  response.Position:
    properties:
      x:
        type: number
      "y":
        type: number
    type: object
  response.ResCreateRoom:
    properties:
      roomID:
        type: integer
    type: object
  response.ResDeckCardGame:
    properties:
      cardIDList:
        items:
          type: integer
        type: array
    type: object
  response.ResFindItResult:
    properties:
      round:
        type: integer
      users:
        items:
          $ref: '#/definitions/response.UserResult'
        type: array
    type: object
  response.ResFindItSoloPlayBoardGame:
    properties:
      gameInfoList:
        items:
          $ref: '#/definitions/response.SoloPlayGameInfo'
        type: array
    type: object
  response.ResGameGoogleOauthCallback:
    properties:
      accessToken:
        type: string
      isDuplicateLogin:
        type: boolean
      refreshToken:
        type: string
      userID:
        type: integer
    type: object
  response.ResGameReissue:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  response.ResGameSignin:
    properties:
      accessToken:
        type: string
      isDuplicateLogin:
        type: boolean
      refreshToken:
        type: string
      userID:
        type: integer
    type: object
  response.ResGetGameUser:
    properties:
      coin:
        type: integer
      disconnected:
        type: integer
      email:
        type: string
      name:
        type: string
      profileID:
        type: integer
      userID:
        type: integer
    type: object
  response.ResGetUser:
    properties:
      coin:
        type: integer
      disconnected:
        type: integer
      email:
        type: string
      name:
        type: string
      profileID:
        type: integer
      userID:
        type: integer
    type: object
  response.ResHistoryChat:
    properties:
      chats:
        items:
          $ref: '#/definitions/response.HistoryChat'
        type: array
      total:
        type: integer
    type: object
  response.ResListCardGame:
    properties:
      cards:
        items:
          $ref: '#/definitions/response.FrogCard'
        type: array
      totalCount:
        type: integer
    type: object
  response.ResListGame:
    properties:
      games:
        items:
          $ref: '#/definitions/response.GameInfo'
        type: array
      totalCount:
        type: integer
    type: object
  response.ResListGameProfile:
    properties:
      profiles:
        items:
          $ref: '#/definitions/main_features_game_profiles_model_response.Profile'
        type: array
    type: object
  response.ResListGameUser:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/main_features_game_users_model_response.User'
        type: array
    type: object
  response.ResListMissionGame:
    properties:
      missions:
        items:
          $ref: '#/definitions/response.Mission'
        type: array
    type: object
  response.ResListProfile:
    properties:
      profiles:
        items:
          $ref: '#/definitions/main_features_profiles_model_response.Profile'
        type: array
    type: object
  response.ResListProfileGameUser:
    properties:
      profiles:
        items:
          $ref: '#/definitions/main_features_game_users_model_response.Profile'
        type: array
    type: object
  response.ResListProfileUser:
    properties:
      profiles:
        items:
          $ref: '#/definitions/main_features_users_model_response.Profile'
        type: array
    type: object
  response.ResListRoom:
    properties:
      rooms:
        items:
          $ref: '#/definitions/response.ListRoom'
        type: array
      total:
        type: integer
    type: object
  response.ResListUser:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/main_features_users_model_response.User'
        type: array
    type: object
  response.ResMetaGame:
    properties:
      categories:
        items:
          $ref: '#/definitions/response.Category'
        type: array
    type: object
  response.ResMetaRoom:
    properties:
      timers:
        items:
          type: integer
        type: array
    type: object
  response.ResReissue:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  response.ResResult:
    properties:
      bonuses:
        items:
          type: string
        type: array
      score:
        type: integer
      winner:
        type: integer
    type: object
  response.ResSignin:
    properties:
      accessToken:
        type: string
      isDuplicateLogin:
        type: boolean
      refreshToken:
        type: string
      userID:
        type: integer
    type: object
  response.ResUserListRoom:
    properties:
      users:
        items:
          $ref: '#/definitions/main_features_rooms_model_response.User'
        type: array
    type: object
  response.ResV2DeckCardGame:
    properties:
      cardIDList:
        items:
          type: integer
        type: array
    type: object
  response.ResV2DrawResult:
    properties:
      users:
        items:
          $ref: '#/definitions/response.DrawResult'
        type: array
    type: object
  response.ResV2ListCardGame:
    properties:
      cards:
        items:
          $ref: '#/definitions/response.BirdCard'
        type: array
      totalCount:
        type: integer
    type: object
  response.ResV2Result:
    properties:
      missions:
        items:
          $ref: '#/definitions/response.ResultMission'
        type: array
      winner:
        type: integer
    type: object
  response.ResV02GoogleOauthCallback:
    properties:
      accessToken:
        type: string
      isDuplicateLogin:
        type: boolean
      refreshToken:
        type: string
      userID:
        type: integer
    type: object
  response.ResultMission:
    properties:
      cards:
        items:
          type: integer
        type: array
      missionID:
        type: integer
    type: object
  response.SoloPlayGameInfo:
    properties:
      abnormalUrl:
        type: string
      correctPositions:
        items:
          $ref: '#/definitions/response.Position'
        type: array
      imageID:
        type: integer
      normalUrl:
        type: string
      round:
        type: integer
    type: object
  response.UserResult:
    properties:
      name:
        type: string
      totalCorrectCount:
        type: integer
    type: object
info:
  contact: {}
paths:
  /find-it/v0.1/game/image:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 틀린그림찾기 이미지 파일
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 틀린그림찾기 이미지를 저장한다.
      tags:
      - game
  /find-it/v0.1/game/image-info:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqFindItImageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이미지 정보를 저장한다.
      tags:
      - game
  /find-it/v0.1/game/result:
    post:
      description: |
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqFindItResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResFindItResult'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: '[틀린그림찾기] 게임 결과 가져오기'
      tags:
      - app/find-it/game
  /find-it/v0.1/game/solo-play:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 플레이 라운드 수
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqFindItSoloPlayBoardGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResFindItSoloPlayBoardGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 틀린그림찾기 솔로플레이 이미지 가져오기
      tags:
      - app/find-it/game
  /find-it/v0.1/rooms/match/ws:
    get:
      responses: {}
  /v0.1/auth/fcm-token:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqFCMToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fcm 토큰 저장
      tags:
      - auth
  /v0.1/auth/google:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: google oauth 로그인
      tags:
      - auth
  /v0.1/auth/google/callback:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GoogleOauthCallbackRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: google oauth 로그인 콜백
      tags:
      - auth
  /v0.1/auth/logout:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그아웃 하기
      tags:
      - auth
  /v0.1/auth/password/request:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqRequestPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 비밀번호 변경 요청
      tags:
      - auth
  /v0.1/auth/password/validate:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email, password, code
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqValidatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 비밀번호 변경 검증
      tags:
      - auth
  /v0.1/auth/signin:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqSignin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResSignin'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그인
      tags:
      - auth
  /v0.1/auth/signin/check:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqCheckSignin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그인 체크
      tags:
      - auth
  /v0.1/auth/signup:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이름, 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이메일 회원 가입
      tags:
      - auth
  /v0.1/auth/signup/request:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqRequestSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이메일 인증 요청
      tags:
      - auth
  /v0.1/auth/token/reissue:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 액세스 토큰, 리프레시 토큰
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqReissue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResReissue'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 액세스 토큰 재발급
      tags:
      - auth
  /v0.1/chats:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: roomID
        in: query
        name: roomID
        required: true
        type: integer
      - description: 조회할 페이지. 0부터 시작, 누락시 0으로 처리
        in: query
        name: page
        type: integer
      - description: '페이지당 알림 개수. 누락시 10으로 처리 '
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResHistoryChat'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 채팅 리스트 가져오기
      tags:
      - chats
  /v0.1/game/{roomID}/deck:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: roomID
        in: path
        name: roomID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResDeckCardGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 정보 가져오기
      tags:
      - game
  /v0.1/game/auth/fcm-token:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameFCMToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Fcm 토큰 저장
      tags:
      - game/auth
  /v0.1/game/auth/google/callback:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResGameGoogleOauthCallback'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: google oauth 로그인 콜백
      tags:
      - game/auth
  /v0.1/game/auth/logout:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그아웃 하기
      tags:
      - game/auth
  /v0.1/game/auth/name/check:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이름 체크
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameNameCheck'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이름 중복 체크
      tags:
      - game/auth
  /v0.1/game/auth/password/request:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameRequestPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 비밀번호 변경 요청
      tags:
      - game/auth
  /v0.1/game/auth/password/validate:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email, password, code
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameValidatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 비밀번호 변경 검증
      tags:
      - game/auth
  /v0.1/game/auth/signin:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameSignin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResGameSignin'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그인
      tags:
      - game/auth
  /v0.1/game/auth/signin/check:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameCheckSignin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 로그인 체크
      tags:
      - game/auth
  /v0.1/game/auth/signup:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재
        USER_GOOGLE_ALREADY_EXISTED : 구글 계정이 이미 존재
        PASSWORD_NOT_MATCH : 비밀번호가 일치하지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 이름, 이메일, 비밀번호
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이메일 회원 가입
      tags:
      - game/auth
  /v0.1/game/auth/signup/request:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameRequestSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 이메일 인증 요청
      tags:
      - game/auth
  /v0.1/game/auth/signup/validate:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: email, Signup, code
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameValidateSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 회원가입 인증 코드 검증
      tags:
      - game/auth
  /v0.1/game/auth/token/reissue:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 액세스 토큰, 리프레시 토큰
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqGameReissue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResGameReissue'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 액세스 토큰 재발급
      tags:
      - game/auth
  /v0.1/game/card/discard:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqDiscard'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 버리기
      tags:
      - game
  /v0.1/game/card/ownership:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqOwnership'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 소유하기
      tags:
      - game
  /v0.1/game/cards:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListCardGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 개굴작 카드 정보 리스트 가져오기
      tags:
      - game
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqSaveCardInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 정보를 저장한다.
      tags:
      - game
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqUpdateCard'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 정보를 수정한다.(image x)
      tags:
      - game
  /v0.1/game/cards/image:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 새카드 이미지 파일
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 이미지를 저장한다.
      tags:
      - game
  /v0.1/game/dora:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqDora'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 도라 선택하기
      tags:
      - game
  /v0.1/game/list:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 정보를 가져온다.
      tags:
      - app/game
  /v0.1/game/loan:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님
        NOT_LOAN_CARD : 론할 수 없는 카드

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqLoan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 론 하기
      tags:
      - game
  /v0.1/game/next-turn:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqNextTurn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 다음 턴 넘기기
      tags:
      - game
  /v0.1/game/profiles:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListGameProfile'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 프로필 리스트 가져오기
      tags:
      - game/profile
  /v0.1/game/profiles/image:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: profile image name
        in: formData
        name: name
        type: string
      - description: 토탈 카운트
        in: formData
        name: totalCount
        type: integer
      - description: 프로필 이미지 파일
        in: formData
        name: image
        type: file
      - description: 프로필 설명
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 프로필 이미지 업로드하기
      tags:
      - game/profile
  /v0.1/game/report:
    post:
      description: |
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqReport'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 신고하기
      tags:
      - game
  /v0.1/game/result:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패

        ■ bonus list
        same : 같은 패 (2점)
        continuous : 연속 패 (1점)
        allGreen : 올 그린 (10점)
        allGreen : 도라 (하나당 1점)
        allGreen : 적패 (하나당 1점)
        allGreen : 올 그린 (10점)
        superRed : 슈퍼 레드 (20점)
        tangYao :  탕야오 (1점)
        chanTa : 찬타 (2점)
        chinYao : 칭야오 (15점)
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResResult'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 결과 가져오기
      tags:
      - game
  /v0.1/game/start:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqStart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 시작
      tags:
      - game
  /v0.1/game/users:
    delete:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 회원 탈퇴하기
      tags:
      - game/user
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListGameUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 가져오기
      tags:
      - game/user
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqUpdateGameUsers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 수정하기
      tags:
      - game/user
  /v0.1/game/users/{userID}:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: userID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResGetGameUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 가져오기
      tags:
      - game/user
  /v0.1/game/users/alert:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 활성화 (true) / 비활성화 (false)
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqAlertGameUsers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 알람 활성화/비활성화 수정하기
      tags:
      - game/user
  /v0.1/game/users/batch/coins/full:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: '[배치용] 유저 코인 30까지 모두 회복'
      tags:
      - game/user
  /v0.1/game/users/profiles:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListProfileGameUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 프로필 리스트 가져오기
      tags:
      - game/user
  /v0.1/game/win-request:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqWinRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 승리 요청
      tags:
      - game
  /v0.1/games/images/upload-report:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저가 존재하지 않음
        ■ errCode with 401
        INVALID_AUTH_CODE : 인증 코드 검증 실패
        TOKEN_BAD : 잘못된 토큰
        INVALID_ACCESS_TOKEN : 잘못된 액세스 토큰

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        GEMINI_INTERNAL_SERVER : Gemini 서버 내부 오류
      parameters:
      - description: type
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/request.ReqReportImageUploadGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 새 카드 이미지 업로드 리포트
      tags:
      - game
  /v0.1/profiles:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListProfile'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 프로필 리스트 가져오기
      tags:
      - profile
  /v0.1/profiles/image:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: profile image name
        in: formData
        name: name
        type: string
      - description: 토탈 카운트
        in: formData
        name: totalCount
        type: integer
      - description: 프로필 이미지 파일
        in: formData
        name: image
        type: file
      - description: 프로필 설명
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 프로필 이미지 업로드하기
      tags:
      - profile
  /v0.1/rooms:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: 조회할 페이지. 0부터 시작, 누락시 0으로 처리
        in: query
        name: page
        type: integer
      - description: '페이지당 알림 개수. 누락시 10으로 처리 '
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListRoom'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 목록 가져오기
      tags:
      - rooms
  /v0.1/rooms/create:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResCreateRoom'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 생성
      tags:
      - rooms
  /v0.1/rooms/join/play:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        ROOM_NOT_FOUND : 방을 찾을 수 없음
        ROOM_FULL : 방이 꽉 찼습니다.
        ROOM_USER_NOT_FOUND : 방 유저를 찾을 수 없음
        WRONG_PASSWORD : 비밀번호가 일치하지 않습니다.

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 함께하기 방 참여 체크 (비밀번호 검증)
      tags:
      - rooms
  /v0.1/rooms/join/play/ws:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: access token
        in: query
        name: tkn
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 함께하기 참여 (패스워드 필수) (ws)
      tags:
      - ws
  /v0.1/rooms/match/ws:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: access token
        in: query
        name: tkn
        required: true
        type: string
      - description: timer
        in: query
        name: timer
        required: true
        type: integer
      - description: count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 랜덤으로 방 매칭 (ws)
      tags:
      - ws
  /v0.1/rooms/meta:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResMetaRoom'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 데이터 가져오기
      tags:
      - rooms
  /v0.1/rooms/out:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqOut'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 나가기
      tags:
      - rooms
  /v0.1/rooms/play/together/ws:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: access token
        in: query
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 함께하기 방 생성 (패스워드 발급) (ws)
      tags:
      - ws
  /v0.1/rooms/ready:
    patch:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqReady'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 준비 상태 변경
      tags:
      - rooms
  /v0.1/rooms/session/check:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        ROOM_NOT_FOUND : 방을 찾을 수 없음
        ROOM_FULL : 방이 꽉 찼습니다.
        ROOM_USER_NOT_FOUND : 방 유저를 찾을 수 없음
        WRONG_PASSWORD : 비밀번호가 일치하지 않습니다.

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqCheckSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 세션 ID 체크
      tags:
      - rooms
  /v0.1/rooms/user:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 방 ID
        in: query
        name: roomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResUserListRoom'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 룸 유저 정보 가져오기
      tags:
      - rooms
  /v0.1/users:
    delete:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 회원 탈퇴하기
      tags:
      - user
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 가져오기
      tags:
      - user
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqUpdateUsers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 수정하기
      tags:
      - user
  /v0.1/users/{userID}:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: userID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResGetUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 정보 가져오기
      tags:
      - user
  /v0.1/users/alert:
    put:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: 활성화 (true) / 비활성화 (false)
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqAlertUsers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 알람 활성화/비활성화 수정하기
      tags:
      - user
  /v0.1/users/profiles:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListProfileUser'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 프로필 리스트 가져오기
      tags:
      - user
  /v0.1/users/push:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저가 존재하지 않음
        ■ errCode with 401
        INVALID_AUTH_CODE : 인증 코드 검증 실패
        TOKEN_BAD : 잘못된 토큰
        INVALID_ACCESS_TOKEN : 잘못된 액세스 토큰

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: 메시지 내용
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqPushUsers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 전체 유저 메시지 전송하기
      tags:
      - user
  /v0.2/auth/google/callback:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_EXIST : 유저가 존재하지 않음
        USER_ALREADY_EXISTED : 유저가 이미 존재

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResV02GoogleOauthCallback'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: google oauth 로그인 콜백
      tags:
      - auth
  /v0.2/rooms/create:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 생성 (ws)
      tags:
      - rooms
  /v0.2/rooms/join:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 방 참여 (ws)
      tags:
      - rooms
  /v2.1/game/{roomID}/deck:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: roomID
        in: path
        name: roomID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResV2DeckCardGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 정보 가져오기
      tags:
      - game
  /v2.1/game/{roomID}/draw:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: roomID
        in: path
        name: roomID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResV2DrawResult'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 무승부 게임 결과 가져오기
      tags:
      - v2/game
  /v2.1/game/cards:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResV2ListCardGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 카드 정보 리스트 가져오기
      tags:
      - game
  /v2.1/game/missions:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResListMissionGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 미션 리스트 가져오기
      tags:
      - game
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_OWNER : 방장이 시작 요청을 하지 않음
        NOT_FIRST_PLAYER : 첫 플레이어가 아님

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: 미션 이미지 파일
        in: formData
        name: image
        type: file
      - description: 미션 제목
        in: formData
        name: title
        type: string
      - description: 미션 설명
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 미션 생성하기
      tags:
      - game
  /v2.1/game/report:
    post:
      description: |
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqV2Report'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 유저 신고하기
      tags:
      - game
  /v2.1/game/report/meta:
    get:
      description: |
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResMetaGame'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 신고하기 카테고리 데이터 가져오기
      tags:
      - game
  /v2.1/game/result:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        NOT_ALL_USERS_READY : 모든 유저가 준비되지 않음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: accessToken
        in: header
        name: tkn
        required: true
        type: string
      - description: json body
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ReqV2Result'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResV2Result'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 게임 결과 가져오기
      tags:
      - game
  /v2.1/game/users/batch/coins/one:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: '[배치용] 유저 코인 1씩 회복'
      tags:
      - game/user
  /v2.1/rooms/join/play/ws:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: access token
        in: query
        name: tkn
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 함께하기 참여 (패스워드 필수) (ws)
      tags:
      - ws
  /v2.1/rooms/match/ws:
    get:
      responses: {}
  /v2.1/rooms/play/together/ws:
    get:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음
        USER_ALREADY_EXISTED : 이미 존재하는 유저
        Room_NOT_FOUND : 방을 찾을 수 없음
        Room_FULL : 방이 꽉 참
        Room_USER_NOT_FOUND : 방 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
        PLAYER_STATE_CHANGE_FAILED : 플레이어 상태 변경 실패
      parameters:
      - description: access token
        in: query
        name: tkn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: 함께하기 방 생성 (패스워드 발급) (ws)
      tags:
      - ws
  /v2.1/users/batch/coins/full:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: '[배치용] 유저 코인 30까지 모두 회복'
      tags:
      - user
  /v2.1/users/batch/coins/one:
    post:
      description: |-
        ■ errCode with 400
        PARAM_BAD : 파라미터 오류
        USER_NOT_FOUND : 유저를 찾을 수 없음

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: '[배치용] 유저 코인 1씩 회복'
      tags:
      - user
swagger: "2.0"
