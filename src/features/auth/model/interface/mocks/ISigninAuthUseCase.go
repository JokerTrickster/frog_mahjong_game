// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	context "context"
	request "main/features/auth/model/request"

	mock "github.com/stretchr/testify/mock"
)

// ISigninAuthUseCase is an autogenerated mock type for the ISigninAuthUseCase type
type ISigninAuthUseCase struct {
	mock.Mock
}

// Signin provides a mock function with given fields: c, req
func (_m *ISigninAuthUseCase) Signin(c context.Context, req *request.ReqSignin) error {
	ret := _m.Called(c, req)

	if len(ret) == 0 {
		panic("no return value specified for Signin")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *request.ReqSignin) error); ok {
		r0 = rf(c, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewISigninAuthUseCase creates a new instance of ISigninAuthUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISigninAuthUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISigninAuthUseCase {
	mock := &ISigninAuthUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
