// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"
	request "main/features/auth/model/request"

	mock "github.com/stretchr/testify/mock"
)

// ISignupAuthUseCase is an autogenerated mock type for the ISignupAuthUseCase type
type ISignupAuthUseCase struct {
	mock.Mock
}

// Signup provides a mock function with given fields: c, req
func (_m *ISignupAuthUseCase) Signup(c context.Context, req *request.ReqSignup) error {
	ret := _m.Called(c, req)

	if len(ret) == 0 {
		panic("no return value specified for Signup")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *request.ReqSignup) error); ok {
		r0 = rf(c, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewISignupAuthUseCase creates a new instance of ISignupAuthUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISignupAuthUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISignupAuthUseCase {
	mock := &ISignupAuthUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
