// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"
	request "main/features/room/model/request"

	mock "github.com/stretchr/testify/mock"
)

// IReadyRoomRepository is an autogenerated mock type for the IReadyRoomRepository type
type IReadyRoomRepository struct {
	mock.Mock
}

// FindOneAndUpdateRoomUser provides a mock function with given fields: ctx, uID, req
func (_m *IReadyRoomRepository) FindOneAndUpdateRoomUser(ctx context.Context, uID uint, req *request.ReqReady) error {
	ret := _m.Called(ctx, uID, req)

	if len(ret) == 0 {
		panic("no return value specified for FindOneAndUpdateRoomUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint, *request.ReqReady) error); ok {
		r0 = rf(ctx, uID, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIReadyRoomRepository creates a new instance of IReadyRoomRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIReadyRoomRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IReadyRoomRepository {
	mock := &IReadyRoomRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
